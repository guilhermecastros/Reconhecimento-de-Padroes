iFold <- 1:length(foldList)
iFold <- which(iFold != i)
iFold <- which(iFold != 1)
iFold
length(iFold)
iFold[1]
foldList[[2]]
iFold <- 1:length(foldList)
#filtrar a lista
iFold <- which(iFold != i)
for(j in c(1:length(iFold)))
{
DataTrain <- c(DataTrain, foldList[[iFold[j]]])
}
i <- 1
iFold <- 1:length(foldList)
#filtrar a lista
iFold <- which(iFold != i)
for(j in c(1:length(iFold)))
{
DataTrain <- c(DataTrain, foldList[[iFold[j]]])
}
XResult[j] <- knn(XTrain,XTest[j,],DTrain,K)
}
iFold <- 1:length(foldList)
#filtrar a lista
iFold <- which(iFold != i)
for(j in c(1:length(iFold)))
{
DataTrain <- c(DataTrain, foldList[[iFold[j]]])
}
DataTrain
DataTrain
View(DataTrain)
rep(null,1)
rep('',1)
rep(0,0)
DataTrain <- rep(0,0)
for(j in c(1:length(iFold)))
{
DataTrain <- c(DataTrain, foldList[[iFold[j]]])
}
DataTrain <- rep(null,1)
for(j in c(1:length(iFold)))
{
DataTrain <- c(DataTrain, foldList[[iFold[j]]])
}
DataTrain <- rep(0,0)
for(j in c(1:length(iFold)))
{
DataTrain <- c(DataTrain, foldList[[iFold[j]]])
}
DataTrain <- rep(0,0)
for(j in c(1:length(iFold)))
{
DataTrain <- c(DataTrain, foldList[[iFold[j]]])
}
DataTrain <- rep(0,0)
for(j in c(1:length(iFold)))
{
DataTrain <- c(DataTrain, foldList[[iFold[j]]])
}
foldList <- list()
foldList <- createFolds(1:nrow(X), k = 10)
DataTrain <- rep(0,0)
for(j in c(1:length(iFold)))
{
DataTrain <- c(DataTrain, foldList[[iFold[j]]])
}
View(X)
Y <- matrix(0, nrow = dim(X)[1], ncol = 2)
Y[which(BreastCancer$Class == 'benign'),1] <- 1
Y[which(BreastCancer$Class == 'malignant'),2] <- 1
Y
Y <- as.numeric(BreastCancer$Class)
BreastCancer
Data()
data()
rm(list=ls())
library('class')
library('caret')
library('mlbench')
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- as.numeric(BreastCancer$Class)
data(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- as.numeric(BreastCancer$Class)
evalK <- function(K) {
data(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- as.numeric(BreastCancer$Class)
foldList <- list()
foldList <- createFolds(1:nrow(X), 10)
results <- rep(0,length(foldList))
for(i in c(1:length(foldList))){
iFold <- 1:length(foldList)
#filtrar a lista
iFold <- which(iFold != i)
DataTrain <- rep(0,0)
for(j in c(1:length(iFold)))
{
iDataTrain <- c(DataTrain, foldList[[iFold[j]]])
}
DataTrain <- X[iDataTrain]
DTrain <- Y[iDataTrain]
DataTest <- X[foldList[[i]]]
DTest <- Y[foldList[[i]]]
tempResult <- knn(DataTrain,DataTest,DTrain,K)
results[i] <- (sum(1*(DTrain == DTest))/length(DTest))
}
bestResult <- max(results)
return (bestResult)
}
evalK(1)
DTrain
evalK <- function(K) {
data(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- as.numeric(BreastCancer$Class)
foldList <- list()
foldList <- createFolds(1:nrow(X), 10)
results <- rep(0,length(foldList))
for(i in c(1:length(foldList))){
iFold <- 1:length(foldList)
#filtrar a lista
iFold <- which(iFold != i)
DataTrain <- rep(0,0)
for(j in c(1:length(iFold)))
{
iDataTrain <- c(DataTrain, foldList[[iFold[j]]])
}
DataTrain <- X[iDataTrain]
DTrain <- Y[iDataTrain]
DataTest <- X[foldList[[i]]]
DTest <- Y[foldList[[i]]]
tempResult <- knn(DataTrain,DataTest,DTrain,K)
results[i] <- (sum(1*(tempResult == DTest))/length(DTest))
}
bestResult <- max(results)
return (bestResult)
}
evalK(1)
evalK
evalK(1)
K <- 1
data(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- as.numeric(BreastCancer$Class)
foldList <- list()
foldList <- createFolds(1:nrow(X), 10)
results <- rep(0,length(foldList))
for(i in c(1:length(foldList))){
iFold <- 1:length(foldList)
#filtrar a lista
iFold <- which(iFold != i)
DataTrain <- rep(0,0)
for(j in c(1:length(iFold)))
{
iDataTrain <- c(DataTrain, foldList[[iFold[j]]])
}
DataTrain <- X[iDataTrain]
DTrain <- Y[iDataTrain]
DataTest <- X[foldList[[i]]]
DTest <- Y[foldList[[i]]]
tempResult <- knn(DataTrain,DataTest,DTrain,K)
results[i] <- (sum(1*(tempResult == DTest))/length(DTest))
K <- 1
data(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- as.numeric(BreastCancer$Class)
foldList <- list()
foldList <- createFolds(1:nrow(X), 10)
results <- rep(0,length(foldList))
for(i in c(1:length(foldList))){
iFold <- 1:length(foldList)
#filtrar a lista
iFold <- which(iFold != i)
DataTrain <- rep(0,0)
for(j in c(1:length(iFold)))
{
iDataTrain <- c(DataTrain, foldList[[iFold[j]]])
}
DataTrain <- X[iDataTrain]
DTrain <- Y[iDataTrain]
DataTest <- X[foldList[[i]]]
DTest <- Y[foldList[[i]]]
tempResult <- knn(DataTrain,DataTest,DTrain,K)
results[i] <- (sum(1*(tempResult == DTest))/length(DTest))
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 8 - KNN/mainKNN.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 8 - KNN/mainKNN.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 8 - KNN/mainKNN.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 8 - KNN/mainKNN.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 8 - KNN/mainKNN.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 8 - KNN/mainKNN.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 8 - KNN/mainKNN.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 8 - KNN/mainKNN.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 8 - KNN/mainKNN.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 8 - KNN/mainKNN.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 8 - KNN/mainKNN.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 8 - KNN/mainKNN.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 8 - KNN/mainKNN.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 8 - KNN/mainKNN.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
DTrain
knn(DataTrain,DataTest,DTrain,K)
DataTest
X[foldList[[i]]]
X
DataTest
DataTrain
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
bestResult
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
bestResult
results
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
results
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
results
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/testK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('testK.R')
setwd("C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN")
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
evalK(k, XTrain, DTrain)
evalK
evalK(1,1,1)
source('evalK.r')
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
kResult
max(kResult)
which(kResult == max(kResult))
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
which(kResult == max(kResult))XResult
XResult
XResult
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
K
k
K
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
K
kResult
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
rm(list=ls())
library('bmp')
library('rgl')
library('caret')
library('mlbench')
library('RSNNS')
library('mclust')
library('plot3D')
library('e1071')
library('class')
source('evalK.r')
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- matrix(0, nrow = dim(X)[1], ncol = 2)
Y[which(BreastCancer$Class == 'benign'),1] <- 1
Y[which(BreastCancer$Class == 'malignant'),2] <- 1
N <- 100
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
kResult <- rep(0,N)
for(k in c(1:N/2))
{
xc1 <- X[which(BreastCancer$Class == 'benign'),]
xc2 <- X[which(BreastCancer$Class == 'malignant'),]
index <- sample(dim(xc1)[1])
numOfTrainXC1 <- round(dim(xc1)[1]*0.7)
numOfTestXC1 <- round(dim(xc1)[1]*0.3)
xc1Test <- xc1[index[1:numOfTestXC1],]
xc1Train <- xc1[index[(numOfTestXC1 + 1): dim(xc1)[1]],]
index <- sample(dim(xc2)[1])
numOfTrainXC2 <- round(dim(xc2)[1]*0.7)
numOfTestXC2 <- round(dim(xc2)[1]*0.3)
xc2Test <- xc2[index[1:numOfTestXC2],]
xc2Train <- xc2[index[(numOfTestXC2 + 1):dim(xc2)[1]],]
# formatando base de dados
XTest <-  rbind(xc1Test,xc2Test)
DTest <- c(rep(1,nrow(xc1Test)),rep(2,nrow(xc2Test)))
DTrain <- c(rep(1,nrow(xc1Train)),rep(2,nrow(xc2Train)))
#DTrain <- as.factor(DTrain)
XTrain <- rbind(xc1Train,xc2Train)
kResult[k] <- evalK(k, XTrain, DTrain)
}
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
which(kResult == max(kResult))
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
N/3
round(N/3)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
K
which(kResult == max(kResult))
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
K
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
kResult
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
XResult
kResult
which(kResult == max(kResult))
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
rm(list=ls())
library('bmp')
library('rgl')
library('caret')
library('mlbench')
library('RSNNS')
library('mclust')
library('plot3D')
library('e1071')
library('class')
source('evalK.r')
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- matrix(0, nrow = dim(X)[1], ncol = 2)
Y[which(BreastCancer$Class == 'benign'),1] <- 1
Y[which(BreastCancer$Class == 'malignant'),2] <- 1
N <- 100
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
kResult <- rep(0,round(N/3))
xc1 <- X[which(BreastCancer$Class == 'benign'),]
xc2 <- X[which(BreastCancer$Class == 'malignant'),]
index <- sample(dim(xc1)[1])
numOfTrainXC1 <- round(dim(xc1)[1]*0.7)
numOfTestXC1 <- round(dim(xc1)[1]*0.3)
xc1Test <- xc1[index[1:numOfTestXC1],]
xc1Train <- xc1[index[(numOfTestXC1 + 1): dim(xc1)[1]],]
index <- sample(dim(xc2)[1])
numOfTrainXC2 <- round(dim(xc2)[1]*0.7)
numOfTestXC2 <- round(dim(xc2)[1]*0.3)
xc2Test <- xc2[index[1:numOfTestXC2],]
xc2Train <- xc2[index[(numOfTestXC2 + 1):dim(xc2)[1]],]
# formatando base de dados
XTest <-  rbind(xc1Test,xc2Test)
DTest <- c(rep(1,nrow(xc1Test)),rep(2,nrow(xc2Test)))
DTrain <- c(rep(1,nrow(xc1Train)),rep(2,nrow(xc2Train)))
#DTrain <- as.factor(DTrain)
XTrain <- rbind(xc1Train,xc2Train)
foldList <- list()
foldList <- createFolds(1:nrow(X), 10)
foldList
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
foldList
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
foldList
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
debugSource('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/evalK.R', echo=TRUE)
debugSource('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/evalK.R', echo=TRUE)
dataX
debugSource('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/evalK.R', echo=TRUE)
X <- XTrain
Y <- DTrain
debugSource('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/evalK.R', echo=TRUE)
X <- XTrain
Y <- DTrain
foldList
length(foldList)
debugSource('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/evalK.R', echo=TRUE)
debugSource('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/evalK.R', echo=TRUE)
debugSource('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/evalK.R', echo=TRUE)
debugSource('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/evalK.R', echo=TRUE)
K <- 1
#foldList <- createFolds(1:nrow(X), 10)
iDataTrain
DataTrain
iFold <- 1:length(foldList)
foldList
Q
DataTrain <- rep(0,0)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/evalK.R', echo=TRUE)
iFold
iDataTrain
X
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/evalK.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
kResult
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício KNN/main.R', echo=TRUE)
