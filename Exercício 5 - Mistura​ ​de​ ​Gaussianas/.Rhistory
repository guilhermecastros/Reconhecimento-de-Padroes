source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercicio 3/main.R', echo=TRUE)
storage
sd(storage)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercicio 3/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercicio 3/main.R', echo=TRUE)
storage
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercicio 3/main.R', echo=TRUE)
install.packages("R.matlab")
X <- matrix(0, ncol=2, nrow=800)
View(X)
size(X,1);
dim(X,1);
dim(X)[1];
= rep(0,n,K)
rep(0,n,K)
n = dim(X)[1]
U = rep(0,n,K)
K <- 4
n
U = rep(0,n,K)
matrix(0,n,K)
U <- matrix(0,n,K)
idx <- matrix(0,n,1)
randi(200)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
% calculating the objective function
W = zeros(K,1);
matrix(0,K,1)
a<- matrix(0,K,1)
a
vector(0,K)
vector(K)
vector
vector(true,K)
vector(1,K)
vector(0,K)
vector(,K)
vector(0,K)
vector(mode="integer",K)
W = matrix(0,K,1)
W
find
find
find(idx==j)
j = 1
find(idx==j)
find(idx == j)
which(idx == j)
which(idx == j)
which(idx == j)[0]
which(idx == j)
idx
which(idx == j)
wich(idx == j)
which(idx == j)
pdist
which(idx == j)[[1]]
which(idx == j)[[1]]
which(idx == j)
match(1,2)
match(1,1)
match(1,[1,2,3])
haystack <- c(1, 2, 4, 3, 4)
needle <- 4
indices <- needle == haystack
indices
haystack <- c(1, 2, 4, 3, 4)
needle <- 4
indices <- needle == haystack
indices
idx[indexes]
idx[indeces]
idx[indeces,]
indexes
indices
idx[indices]
idx == j
indexes <- idx == j
idx[indexes]
pop <- c(3,4,5,7,13)
which(pop==13)
which(idx==0)
which(idx==1)
which(idx==j)
j<- 0
which(idx==j)
idx[0] <- 1
j<- 1
which(idx==j)
idx[1] <- 1
which(idx==j)
sum(W)
length(indexes)
U <- matrix(0,n,K)
unique
unique(c(1,2,3))
unique(c(1,2,3,3))
clus <- unique(idx)
c <- length(clus)
c(1,2,3)^2
setwd("C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 4")
plot(data)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 4/mainGeneralizado.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercicio 2/main.R', echo=TRUE)
setwd("C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercicio 2")
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercicio 2/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 4/mainGeneralizado.R', echo=TRUE)
setwd("C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 4")
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 4/mainGeneralizado.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 4/mainGeneralizado.R', echo=TRUE)
contour(seqi,seqj,gridResult[[2]], col='black', drawlabels = F)
persp3d(seqi,seqj,gridResult[[1]], col=colors[1])
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 4/mainGeneralizado.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 4/mainGeneralizado.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 4/mainGeneralizado.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 4/mainGeneralizado.R', echo=TRUE)
persp3d(seqi,seqj,gridResult[[1]], col=colors[1])
persp3d(seqi,seqj,gridResult[[2]], col=colors[2], add = TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
setwd("C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5")
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
trainY
trainY == 1
trainY == 2
BreastCancer
summary(BreastCancer)
summary(BreastCancer$Cl.thickness)
BreastCancer$Cl.thickness
dim(X)
X[[9]]
X[9
]
X[,9]
rm(list=ls())
library('bmp')
library('rgl')
library('caret')
library('mlbench')
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
trainY <- as.numeric(BreastCancer$Class)
ic1 <- which(X[,9] == 1)
ic2 <- which(X[,9] == 2)
xc1 <- X[ic1]
xc2 <- X[ic2]
index <- sample(dim(xc1)[1])
class1Test <- xc1[index[1:(dim(xc1)[1]*0.3)],]
class1Train <- xc1[index[(dim(xc1)[1]*0.3 + 1):dim(xc1)[1]],]
xc1
xc1 <- X[ic1,]
xc1
rm(list=ls())
library('bmp')
library('rgl')
library('caret')
library('mlbench')
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
trainY <- as.numeric(BreastCancer$Class)
ic1 <- which(X[,9] == 1)
ic2 <- which(X[,9] == 2)
xc1 <- X[ic1,]
xc2 <- X[ic2,]
index <- sample(dim(xc1)[1])
class1Test <- xc1[index[1:(dim(xc1)[1]*0.3)],]
class1Train <- xc1[index[(dim(xc1)[1]*0.3 + 1):dim(xc1)[1]],]
10*0.3
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
summary(BreastCancer)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
BreastCancer$benign
BreastCancer$Id
BreastCancer$Class
rm(list=ls())
library('bmp')
library('rgl')
library('caret')
library('mlbench')
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
trainY <- as.numeric(BreastCancer$Class)
ic1 <- which(BreastCancer$Class == benign)
ic2 <- which(BreastCancer$Class == malignant)
rm(list=ls())
library('bmp')
library('rgl')
library('caret')
library('mlbench')
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
trainY <- as.numeric(BreastCancer$Class)
ic1 <- which(BreastCancer$Class == 'benign')
ic2 <- which(BreastCancer$Class == 'malignant')
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
168 + 72
137 + 320
install.packages("RSNNS")
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
result
summary(result)
dim(X)
dim(Y)
Y <- as.numeric(BreastCancer$Class)
dim(Y)
as.numeric(BreastCancer$Class)
Y <- as.numeric(BreastCancer$Class)
Y
result <- splitForTrainingAndTest(X, Y, ratio = 0.3)
summary(result)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
summary(result)
summary(result$inputsTrain)
dim(result$inputsTrain)
dim(result$targetsTrain)
dim(result$inputsTest)
dim(result$inputsTrain)
rm(list=ls())
library('bmp')
library('rgl')
library('caret')
library('mlbench')
library('RSNNS')
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- as.numeric(BreastCancer$Class)
result <- splitForTrainingAndTest(X, Y, ratio = 0.30)
summary(result)
result$inputsTrain
a <- result$inputsTrain
a <- result$inputsTest
a <- result$TargetTest
a <- result$TargetsTest
a <- result$targetTest
a <- result$targetsTest
a <- result$targetsTrain
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
dim(result$inputsTrain)
dim(result$inputsTest)
dim(result$targetTest)
dim(result$targetsTest)
dim(result$targetsTest)
dim(result$inputTest)
dim(result$inputsTest)
dim(result$inputsTrain)
dim(result$inputsTrain)
summary(result$inputsTrain)
summary(result$inputsTest)
a <- result$inputsTest
densityMclust(xc1Train)
install.packages("mclust")
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
model
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
result <- splitForTrainingAndTest(X, Y, ratio = 0.30)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
model
summary(model)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
PxC
summary(PxC)
View(as.matrix(PxC))
View(as.matrix(PxC))
model$parameters
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
View(as.matrix(PxC))
plot(PxC)
