numOfValidationXC2 <- round(dim(xc2)[1]*0.2)
xc2Test <- xc2[index[1:numOfTestXC2],]
xc2Train <- xc2[index[(numOfTestXC2 + 1): (numOfTestXC2 + numOfTrainXC2)],]
xc2Validation <- xc1[index[((numOfTestXC2 + numOfTrainXC2) + 1): dim(xc2)[1]],]
# formatando base de dados
D <- c(rep(-1,nrow(xc1Train)),rep(1,nrow(xc2Train)))
D <- as.factor(D)
X <- rbind(xc1Train,xc2Train)
# Validação
DValidation <- c(rep(-1,nrow(xc1Validation)),rep(1,nrow(xc2Validation)))
#DTest <- as.factor(DTest)
XValidation <- rbind(xc1Validation,xc2Validation)
#Modelos
#gamma = raio da gaussiana
#cost = parâmetro C
result <- matrix(0, 100,100)
cost <- seq(1,1000,10)
gamma <- seq(0.1, 10, 0.1)
for(i in 1:length(cost)){
for(j in 1:length(gamma)){
svm.model <- svm(D ~ ., data = X, cost = cost[i], gamma = gamma[j])
svm.pred <- predict(svm.model, XValidation)
# compute vsm confusion matrix
confusion <- table(DValidation, pred = as.numeric(as.character(svm.pred)))
Pxc <- as.numeric(as.character(svm.pred))
result[i,j] <- sum(1*(DValidation == Pxc))/length(Pxc)
}
}
View(result)
max(result)
rm(list=ls())
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- matrix(0, nrow = dim(X)[1], ncol = 2)
Y[which(BreastCancer$Class == 'benign'),1] <- 1
Y[which(BreastCancer$Class == 'malignant'),2] <- 1
N <- 10
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
xc1 <- X[which(BreastCancer$Class == 'benign'),]
xc2 <- X[which(BreastCancer$Class == 'malignant'),]
index <- sample(dim(xc1)[1])
numOfTrainXC1 <- round(dim(xc1)[1]*0.6)
numOfTestXC1 <- round(dim(xc1)[1]*0.2)
numOfValidationXC1 <- round(dim(xc1)[1]*0.2)
xc1Test <- xc1[index[1:numOfTestXC1],]
xc1Train <- xc1[index[(numOfTestXC1 + 1): (numOfTestXC1 + numOfTrainXC1)],]
xc1Validation <- xc1[index[((numOfTestXC1 + numOfTrainXC1) + 1): dim(xc1)[1]],]
index <- sample(dim(xc2)[1])
numOfTrainXC2 <- round(dim(xc2)[1]*0.6)
numOfTestXC2 <- round(dim(xc2)[1]*0.2)
numOfValidationXC2 <- round(dim(xc2)[1]*0.2)
xc2Test <- xc2[index[1:numOfTestXC2],]
xc2Train <- xc2[index[(numOfTestXC2 + 1): (numOfTestXC2 + numOfTrainXC2)],]
xc2Validation <- xc2[index[((numOfTestXC2 + numOfTrainXC2) + 1): dim(xc2)[1]],]
# formatando base de dados
DTrain <- c(rep(-1,nrow(xc1Train)),rep(1,nrow(xc2Train)))
DTrain <- as.factor(DTrain)
XTrain <- rbind(xc1Train,xc2Train)
# Validação
DValidation <- c(rep(-1,nrow(xc1Validation)),rep(1,nrow(xc2Validation)))
#DTest <- as.factor(DTest)
XValidation <- rbind(xc1Validation,xc2Validation)
#Modelos
#gamma = raio da gaussiana
#cost = parâmetro C
result <- matrix(0, 100,100)
cost <- seq(1,1000,10)
gamma <- seq(0.1, 10, 0.1)
for(i in 1:length(cost)){
for(j in 1:length(gamma)){
svm.model <- svm(DTrain ~ ., data = XTrain, cost = cost[i], gamma = gamma[j])
svm.pred <- predict(svm.model, XValidation)
# compute vsm confusion matrix
confusion <- table(DValidation, pred = as.numeric(as.character(svm.pred)))
Pxc <- as.numeric(as.character(svm.pred))
result[i,j] <- sum(1*(DValidation == Pxc))/length(Pxc)
}
}
View(result)
max(result)
plot(result)
plot(rbind(c(result)))
rbind(c(result))
plot(seq(1,10000,1),rbind(c(result)))
View(result)
max(result)
seq(1,1000,10)
seq(0.1, 10, 0.1)
0.9640288*100
plot(seq(1,10000,1),rbind(c(result)), xlab='', ylab='')
plot(seq(1,10000,1),rbind(c(result)), xlab='', ylab='', main='Evolução percentual da classificação')
rm(list=ls())
N <- 10
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
for(i in 1:N){
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- matrix(0, nrow = dim(X)[1], ncol = 2)
Y[which(BreastCancer$Class == 'benign'),1] <- 1
Y[which(BreastCancer$Class == 'malignant'),2] <- 1
N <- 10
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
xc1 <- X[which(BreastCancer$Class == 'benign'),]
xc2 <- X[which(BreastCancer$Class == 'malignant'),]
index <- sample(dim(xc1)[1])
numOfTrainXC1 <- round(dim(xc1)[1]*0.6)
numOfTestXC1 <- round(dim(xc1)[1]*0.2)
numOfValidationXC1 <- round(dim(xc1)[1]*0.2)
xc1Test <- xc1[index[1:numOfTestXC1],]
xc1Train <- xc1[index[(numOfTestXC1 + 1): (numOfTestXC1 + numOfTrainXC1)],]
xc1Validation <- xc1[index[((numOfTestXC1 + numOfTrainXC1) + 1): dim(xc1)[1]],]
index <- sample(dim(xc2)[1])
numOfTrainXC2 <- round(dim(xc2)[1]*0.6)
numOfTestXC2 <- round(dim(xc2)[1]*0.2)
numOfValidationXC2 <- round(dim(xc2)[1]*0.2)
xc2Test <- xc2[index[1:numOfTestXC2],]
xc2Train <- xc2[index[(numOfTestXC2 + 1): (numOfTestXC2 + numOfTrainXC2)],]
xc2Validation <- xc2[index[((numOfTestXC2 + numOfTrainXC2) + 1): dim(xc2)[1]],]
# formatando base de dados
DTrain <- c(rep(-1,nrow(xc1Train)),rep(1,nrow(xc2Train)))
DTrain <- as.factor(DTrain)
XTrain <- rbind(xc1Train,xc2Train)
# Validação
DValidation <- c(rep(-1,nrow(xc1Validation)),rep(1,nrow(xc2Validation)))
#DTest <- as.factor(DTest)
XValidation <- rbind(xc1Validation,xc2Validation)
svm.model <- svm(DTrain ~ ., data = XTrain, cost = cost[1], gamma = gamma[1])
svm.pred <- predict(svm.model, XValidation)
# compute vsm confusion matrix
confusion <- table(DValidation, pred = as.numeric(as.character(svm.pred)))
Pxc <- as.numeric(as.character(svm.pred))
percentage[i] <- (sum(1*(DValidation == Pxc))/length(Pxc))
MSE[k] <- mean((Pxc-DValidation)^2)
SD[k] <- sd(Pxc-DValidation)
}
rm(list=ls())
N <- 10
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
cost <- seq(1,1000,10)
gamma <- seq(0.1, 10, 0.1)
for(i in 1:N){
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- matrix(0, nrow = dim(X)[1], ncol = 2)
Y[which(BreastCancer$Class == 'benign'),1] <- 1
Y[which(BreastCancer$Class == 'malignant'),2] <- 1
N <- 10
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
xc1 <- X[which(BreastCancer$Class == 'benign'),]
xc2 <- X[which(BreastCancer$Class == 'malignant'),]
index <- sample(dim(xc1)[1])
numOfTrainXC1 <- round(dim(xc1)[1]*0.6)
numOfTestXC1 <- round(dim(xc1)[1]*0.2)
numOfValidationXC1 <- round(dim(xc1)[1]*0.2)
xc1Test <- xc1[index[1:numOfTestXC1],]
xc1Train <- xc1[index[(numOfTestXC1 + 1): (numOfTestXC1 + numOfTrainXC1)],]
xc1Validation <- xc1[index[((numOfTestXC1 + numOfTrainXC1) + 1): dim(xc1)[1]],]
index <- sample(dim(xc2)[1])
numOfTrainXC2 <- round(dim(xc2)[1]*0.6)
numOfTestXC2 <- round(dim(xc2)[1]*0.2)
numOfValidationXC2 <- round(dim(xc2)[1]*0.2)
xc2Test <- xc2[index[1:numOfTestXC2],]
xc2Train <- xc2[index[(numOfTestXC2 + 1): (numOfTestXC2 + numOfTrainXC2)],]
xc2Validation <- xc2[index[((numOfTestXC2 + numOfTrainXC2) + 1): dim(xc2)[1]],]
# formatando base de dados
DTrain <- c(rep(-1,nrow(xc1Train)),rep(1,nrow(xc2Train)))
DTrain <- as.factor(DTrain)
XTrain <- rbind(xc1Train,xc2Train)
# Validação
DValidation <- c(rep(-1,nrow(xc1Validation)),rep(1,nrow(xc2Validation)))
#DTest <- as.factor(DTest)
XValidation <- rbind(xc1Validation,xc2Validation)
svm.model <- svm(DTrain ~ ., data = XTrain, cost = cost[1], gamma = gamma[1])
svm.pred <- predict(svm.model, XValidation)
# compute vsm confusion matrix
confusion <- table(DValidation, pred = as.numeric(as.character(svm.pred)))
Pxc <- as.numeric(as.character(svm.pred))
percentage[i] <- (sum(1*(DValidation == Pxc))/length(Pxc))
MSE[k] <- mean((Pxc-DValidation)^2)
SD[k] <- sd(Pxc-DValidation)
}
rm(list=ls())
N <- 10
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
cost <- seq(1,1000,10)
gamma <- seq(0.1, 10, 0.1)
for(i in 1:N){
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- matrix(0, nrow = dim(X)[1], ncol = 2)
Y[which(BreastCancer$Class == 'benign'),1] <- 1
Y[which(BreastCancer$Class == 'malignant'),2] <- 1
N <- 10
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
xc1 <- X[which(BreastCancer$Class == 'benign'),]
xc2 <- X[which(BreastCancer$Class == 'malignant'),]
index <- sample(dim(xc1)[1])
numOfTrainXC1 <- round(dim(xc1)[1]*0.6)
numOfTestXC1 <- round(dim(xc1)[1]*0.2)
numOfValidationXC1 <- round(dim(xc1)[1]*0.2)
xc1Test <- xc1[index[1:numOfTestXC1],]
xc1Train <- xc1[index[(numOfTestXC1 + 1): (numOfTestXC1 + numOfTrainXC1)],]
xc1Validation <- xc1[index[((numOfTestXC1 + numOfTrainXC1) + 1): dim(xc1)[1]],]
index <- sample(dim(xc2)[1])
numOfTrainXC2 <- round(dim(xc2)[1]*0.6)
numOfTestXC2 <- round(dim(xc2)[1]*0.2)
numOfValidationXC2 <- round(dim(xc2)[1]*0.2)
xc2Test <- xc2[index[1:numOfTestXC2],]
xc2Train <- xc2[index[(numOfTestXC2 + 1): (numOfTestXC2 + numOfTrainXC2)],]
xc2Validation <- xc2[index[((numOfTestXC2 + numOfTrainXC2) + 1): dim(xc2)[1]],]
# formatando base de dados
DTrain <- c(rep(-1,nrow(xc1Train)),rep(1,nrow(xc2Train)))
DTrain <- as.factor(DTrain)
XTrain <- rbind(xc1Train,xc2Train)
# Validação
DValidation <- c(rep(-1,nrow(xc1Validation)),rep(1,nrow(xc2Validation)))
#DTest <- as.factor(DTest)
XValidation <- rbind(xc1Validation,xc2Validation)
svm.model <- svm(DTrain ~ ., data = XTrain, cost = cost[1], gamma = gamma[1])
svm.pred <- predict(svm.model, XValidation)
# compute vsm confusion matrix
confusion <- table(DValidation, pred = as.numeric(as.character(svm.pred)))
Pxc <- as.numeric(as.character(svm.pred))
percentage[i] <- (sum(1*(DValidation == Pxc))/length(Pxc))
MSE[i] <- mean((Pxc-DValidation)^2)
SD[i] <- sd(Pxc-DValidation)
}
plot(MSE, xlab='', ylab='',main='Erro Quadrático Médio (MSE)')
plot(SD, xlab='', ylab='',main='Desvio Padrão (SD)')
plot(percentage, xlab='', ylab='',main='Acerto Percentual')
mean(percentage)
percentage
N <- 10
for(i in 1:N){
rm(list=ls())
N <- 10
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
cost <- seq(1,1000,10)
gamma <- seq(0.1, 10, 0.1)
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- matrix(0, nrow = dim(X)[1], ncol = 2)
Y[which(BreastCancer$Class == 'benign'),1] <- 1
Y[which(BreastCancer$Class == 'malignant'),2] <- 1
N <- 10
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
xc1 <- X[which(BreastCancer$Class == 'benign'),]
xc2 <- X[which(BreastCancer$Class == 'malignant'),]
index <- sample(dim(xc1)[1])
numOfTrainXC1 <- round(dim(xc1)[1]*0.6)
numOfTestXC1 <- round(dim(xc1)[1]*0.2)
numOfValidationXC1 <- round(dim(xc1)[1]*0.2)
xc1Test <- xc1[index[1:numOfTestXC1],]
xc1Train <- xc1[index[(numOfTestXC1 + 1): (numOfTestXC1 + numOfTrainXC1)],]
xc1Validation <- xc1[index[((numOfTestXC1 + numOfTrainXC1) + 1): dim(xc1)[1]],]
index <- sample(dim(xc2)[1])
numOfTrainXC2 <- round(dim(xc2)[1]*0.6)
numOfTestXC2 <- round(dim(xc2)[1]*0.2)
numOfValidationXC2 <- round(dim(xc2)[1]*0.2)
xc2Test <- xc2[index[1:numOfTestXC2],]
xc2Train <- xc2[index[(numOfTestXC2 + 1): (numOfTestXC2 + numOfTrainXC2)],]
xc2Validation <- xc2[index[((numOfTestXC2 + numOfTrainXC2) + 1): dim(xc2)[1]],]
# formatando base de dados
DTrain <- c(rep(-1,nrow(xc1Train)),rep(1,nrow(xc2Train)))
DTrain <- as.factor(DTrain)
XTrain <- rbind(xc1Train,xc2Train)
# Validação
DValidation <- c(rep(-1,nrow(xc1Validation)),rep(1,nrow(xc2Validation)))
#DTest <- as.factor(DTest)
XValidation <- rbind(xc1Validation,xc2Validation)
svm.model <- svm(DTrain ~ ., data = XTrain, cost = cost[1], gamma = gamma[1])
svm.pred <- predict(svm.model, XValidation)
# compute vsm confusion matrix
confusion <- table(DValidation, pred = as.numeric(as.character(svm.pred)))
Pxc <- as.numeric(as.character(svm.pred))
percentage[i] <- (sum(1*(DValidation == Pxc))/length(Pxc))
MSE[i] <- mean((Pxc-DValidation)^2)
SD[i] <- sd(Pxc-DValidation)
}
for(i in 1:N){
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
cost <- seq(1,1000,10)
gamma <- seq(0.1, 10, 0.1)
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- matrix(0, nrow = dim(X)[1], ncol = 2)
Y[which(BreastCancer$Class == 'benign'),1] <- 1
Y[which(BreastCancer$Class == 'malignant'),2] <- 1
N <- 10
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
xc1 <- X[which(BreastCancer$Class == 'benign'),]
xc2 <- X[which(BreastCancer$Class == 'malignant'),]
index <- sample(dim(xc1)[1])
numOfTrainXC1 <- round(dim(xc1)[1]*0.6)
numOfTestXC1 <- round(dim(xc1)[1]*0.2)
numOfValidationXC1 <- round(dim(xc1)[1]*0.2)
xc1Test <- xc1[index[1:numOfTestXC1],]
xc1Train <- xc1[index[(numOfTestXC1 + 1): (numOfTestXC1 + numOfTrainXC1)],]
xc1Validation <- xc1[index[((numOfTestXC1 + numOfTrainXC1) + 1): dim(xc1)[1]],]
index <- sample(dim(xc2)[1])
numOfTrainXC2 <- round(dim(xc2)[1]*0.6)
numOfTestXC2 <- round(dim(xc2)[1]*0.2)
numOfValidationXC2 <- round(dim(xc2)[1]*0.2)
xc2Test <- xc2[index[1:numOfTestXC2],]
xc2Train <- xc2[index[(numOfTestXC2 + 1): (numOfTestXC2 + numOfTrainXC2)],]
xc2Validation <- xc2[index[((numOfTestXC2 + numOfTrainXC2) + 1): dim(xc2)[1]],]
# formatando base de dados
DTrain <- c(rep(-1,nrow(xc1Train)),rep(1,nrow(xc2Train)))
DTrain <- as.factor(DTrain)
XTrain <- rbind(xc1Train,xc2Train)
# Validação
DValidation <- c(rep(-1,nrow(xc1Validation)),rep(1,nrow(xc2Validation)))
#DTest <- as.factor(DTest)
XValidation <- rbind(xc1Validation,xc2Validation)
svm.model <- svm(DTrain ~ ., data = XTrain, cost = cost[1], gamma = gamma[1])
svm.pred <- predict(svm.model, XValidation)
# compute vsm confusion matrix
confusion <- table(DValidation, pred = as.numeric(as.character(svm.pred)))
Pxc <- as.numeric(as.character(svm.pred))
percentage[i] <- (sum(1*(DValidation == Pxc))/length(Pxc))
MSE[i] <- mean((Pxc-DValidation)^2)
SD[i] <- sd(Pxc-DValidation)
}
1:N
N <- 10
for(i in 1:1){
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
cost <- seq(1,1000,10)
gamma <- seq(0.1, 10, 0.1)
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- matrix(0, nrow = dim(X)[1], ncol = 2)
Y[which(BreastCancer$Class == 'benign'),1] <- 1
Y[which(BreastCancer$Class == 'malignant'),2] <- 1
N <- 10
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
xc1 <- X[which(BreastCancer$Class == 'benign'),]
xc2 <- X[which(BreastCancer$Class == 'malignant'),]
index <- sample(dim(xc1)[1])
numOfTrainXC1 <- round(dim(xc1)[1]*0.6)
numOfTestXC1 <- round(dim(xc1)[1]*0.2)
numOfValidationXC1 <- round(dim(xc1)[1]*0.2)
xc1Test <- xc1[index[1:numOfTestXC1],]
xc1Train <- xc1[index[(numOfTestXC1 + 1): (numOfTestXC1 + numOfTrainXC1)],]
xc1Validation <- xc1[index[((numOfTestXC1 + numOfTrainXC1) + 1): dim(xc1)[1]],]
index <- sample(dim(xc2)[1])
numOfTrainXC2 <- round(dim(xc2)[1]*0.6)
numOfTestXC2 <- round(dim(xc2)[1]*0.2)
numOfValidationXC2 <- round(dim(xc2)[1]*0.2)
xc2Test <- xc2[index[1:numOfTestXC2],]
xc2Train <- xc2[index[(numOfTestXC2 + 1): (numOfTestXC2 + numOfTrainXC2)],]
xc2Validation <- xc2[index[((numOfTestXC2 + numOfTrainXC2) + 1): dim(xc2)[1]],]
# formatando base de dados
DTrain <- c(rep(-1,nrow(xc1Train)),rep(1,nrow(xc2Train)))
DTrain <- as.factor(DTrain)
XTrain <- rbind(xc1Train,xc2Train)
# Validação
DValidation <- c(rep(-1,nrow(xc1Validation)),rep(1,nrow(xc2Validation)))
#DTest <- as.factor(DTest)
XValidation <- rbind(xc1Validation,xc2Validation)
svm.model <- svm(DTrain ~ ., data = XTrain, cost = cost[1], gamma = gamma[1])
svm.pred <- predict(svm.model, XValidation)
# compute vsm confusion matrix
confusion <- table(DValidation, pred = as.numeric(as.character(svm.pred)))
Pxc <- as.numeric(as.character(svm.pred))
percentage[i] <- (sum(1*(DValidation == Pxc))/length(Pxc))
MSE[i] <- mean((Pxc-DValidation)^2)
SD[i] <- sd(Pxc-DValidation)
}
N <- 10
for(i in 1:2){
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
cost <- seq(1,1000,10)
gamma <- seq(0.1, 10, 0.1)
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- matrix(0, nrow = dim(X)[1], ncol = 2)
Y[which(BreastCancer$Class == 'benign'),1] <- 1
Y[which(BreastCancer$Class == 'malignant'),2] <- 1
N <- 10
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
xc1 <- X[which(BreastCancer$Class == 'benign'),]
xc2 <- X[which(BreastCancer$Class == 'malignant'),]
index <- sample(dim(xc1)[1])
numOfTrainXC1 <- round(dim(xc1)[1]*0.6)
numOfTestXC1 <- round(dim(xc1)[1]*0.2)
numOfValidationXC1 <- round(dim(xc1)[1]*0.2)
xc1Test <- xc1[index[1:numOfTestXC1],]
xc1Train <- xc1[index[(numOfTestXC1 + 1): (numOfTestXC1 + numOfTrainXC1)],]
xc1Validation <- xc1[index[((numOfTestXC1 + numOfTrainXC1) + 1): dim(xc1)[1]],]
index <- sample(dim(xc2)[1])
numOfTrainXC2 <- round(dim(xc2)[1]*0.6)
numOfTestXC2 <- round(dim(xc2)[1]*0.2)
numOfValidationXC2 <- round(dim(xc2)[1]*0.2)
xc2Test <- xc2[index[1:numOfTestXC2],]
xc2Train <- xc2[index[(numOfTestXC2 + 1): (numOfTestXC2 + numOfTrainXC2)],]
xc2Validation <- xc2[index[((numOfTestXC2 + numOfTrainXC2) + 1): dim(xc2)[1]],]
# formatando base de dados
DTrain <- c(rep(-1,nrow(xc1Train)),rep(1,nrow(xc2Train)))
DTrain <- as.factor(DTrain)
XTrain <- rbind(xc1Train,xc2Train)
# Validação
DValidation <- c(rep(-1,nrow(xc1Validation)),rep(1,nrow(xc2Validation)))
#DTest <- as.factor(DTest)
XValidation <- rbind(xc1Validation,xc2Validation)
svm.model <- svm(DTrain ~ ., data = XTrain, cost = cost[1], gamma = gamma[1])
svm.pred <- predict(svm.model, XValidation)
# compute vsm confusion matrix
confusion <- table(DValidation, pred = as.numeric(as.character(svm.pred)))
Pxc <- as.numeric(as.character(svm.pred))
percentage[i] <- (sum(1*(DValidation == Pxc))/length(Pxc))
MSE[i] <- mean((Pxc-DValidation)^2)
SD[i] <- sd(Pxc-DValidation)
}
MSE <- rep(0,N)
SD <- rep(0,N)
percentage <- rep(0,N)
N <- 10
for(i in 1:N){
cost <- seq(1,1000,10)
gamma <- seq(0.1, 10, 0.1)
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- matrix(0, nrow = dim(X)[1], ncol = 2)
Y[which(BreastCancer$Class == 'benign'),1] <- 1
Y[which(BreastCancer$Class == 'malignant'),2] <- 1
xc1 <- X[which(BreastCancer$Class == 'benign'),]
xc2 <- X[which(BreastCancer$Class == 'malignant'),]
index <- sample(dim(xc1)[1])
numOfTrainXC1 <- round(dim(xc1)[1]*0.6)
numOfTestXC1 <- round(dim(xc1)[1]*0.2)
numOfValidationXC1 <- round(dim(xc1)[1]*0.2)
xc1Test <- xc1[index[1:numOfTestXC1],]
xc1Train <- xc1[index[(numOfTestXC1 + 1): (numOfTestXC1 + numOfTrainXC1)],]
xc1Validation <- xc1[index[((numOfTestXC1 + numOfTrainXC1) + 1): dim(xc1)[1]],]
index <- sample(dim(xc2)[1])
numOfTrainXC2 <- round(dim(xc2)[1]*0.6)
numOfTestXC2 <- round(dim(xc2)[1]*0.2)
numOfValidationXC2 <- round(dim(xc2)[1]*0.2)
xc2Test <- xc2[index[1:numOfTestXC2],]
xc2Train <- xc2[index[(numOfTestXC2 + 1): (numOfTestXC2 + numOfTrainXC2)],]
xc2Validation <- xc2[index[((numOfTestXC2 + numOfTrainXC2) + 1): dim(xc2)[1]],]
# formatando base de dados
DTrain <- c(rep(-1,nrow(xc1Train)),rep(1,nrow(xc2Train)))
DTrain <- as.factor(DTrain)
XTrain <- rbind(xc1Train,xc2Train)
# Validação
DValidation <- c(rep(-1,nrow(xc1Validation)),rep(1,nrow(xc2Validation)))
#DTest <- as.factor(DTest)
XValidation <- rbind(xc1Validation,xc2Validation)
svm.model <- svm(DTrain ~ ., data = XTrain, cost = cost[1], gamma = gamma[1])
svm.pred <- predict(svm.model, XValidation)
# compute vsm confusion matrix
confusion <- table(DValidation, pred = as.numeric(as.character(svm.pred)))
Pxc <- as.numeric(as.character(svm.pred))
percentage[i] <- (sum(1*(DValidation == Pxc))/length(Pxc))
MSE[i] <- mean((Pxc-DValidation)^2)
SD[i] <- sd(Pxc-DValidation)
}
plot(MSE, xlab='', ylab='',main='Erro Quadrático Médio (MSE)')
plot(SD, xlab='', ylab='',main='Desvio Padrão (SD)')
plot(percentage, xlab='', ylab='',main='Acerto Percentual')
mean(percentage)
mean(percentage)
