source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercicio 3/main.R', echo=TRUE)
storage
sd(storage)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercicio 3/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercicio 3/main.R', echo=TRUE)
storage
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercicio 3/main.R', echo=TRUE)
install.packages("R.matlab")
X <- matrix(0, ncol=2, nrow=800)
View(X)
size(X,1);
dim(X,1);
dim(X)[1];
= rep(0,n,K)
rep(0,n,K)
n = dim(X)[1]
U = rep(0,n,K)
K <- 4
n
U = rep(0,n,K)
matrix(0,n,K)
U <- matrix(0,n,K)
idx <- matrix(0,n,1)
randi(200)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
sample(1:K, 1)
% calculating the objective function
W = zeros(K,1);
matrix(0,K,1)
a<- matrix(0,K,1)
a
vector(0,K)
vector(K)
vector
vector(true,K)
vector(1,K)
vector(0,K)
vector(,K)
vector(0,K)
vector(mode="integer",K)
W = matrix(0,K,1)
W
find
find
find(idx==j)
j = 1
find(idx==j)
find(idx == j)
which(idx == j)
which(idx == j)
which(idx == j)[0]
which(idx == j)
idx
which(idx == j)
wich(idx == j)
which(idx == j)
pdist
which(idx == j)[[1]]
which(idx == j)[[1]]
which(idx == j)
match(1,2)
match(1,1)
match(1,[1,2,3])
haystack <- c(1, 2, 4, 3, 4)
needle <- 4
indices <- needle == haystack
indices
haystack <- c(1, 2, 4, 3, 4)
needle <- 4
indices <- needle == haystack
indices
idx[indexes]
idx[indeces]
idx[indeces,]
indexes
indices
idx[indices]
idx == j
indexes <- idx == j
idx[indexes]
pop <- c(3,4,5,7,13)
which(pop==13)
which(idx==0)
which(idx==1)
which(idx==j)
j<- 0
which(idx==j)
idx[0] <- 1
j<- 1
which(idx==j)
idx[1] <- 1
which(idx==j)
sum(W)
length(indexes)
U <- matrix(0,n,K)
unique
unique(c(1,2,3))
unique(c(1,2,3,3))
clus <- unique(idx)
c <- length(clus)
c(1,2,3)^2
rm(list=ls())
library('bmp')
library('rgl')
library('caret')
library('mlbench')
library('RSNNS')
library('mclust')
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- as.numeric(BreastCancer$Class)
result <- splitForTrainingAndTest(X, Y, ratio = 0.30)
xTrain <- result$inputsTrain
xTest <- result$inputsTest
xTrain
dim(xTrain)
dim(xTest)
dim(result$targetsTrain)
data(iris)
#shuffle the vector
iris <- iris[sample(1:nrow(iris),length(1:nrow(iris))),1:ncol(iris)]
irisValues <- iris[,1:4]
irisTargets <- decodeClassLabels(iris[,5])
splitForTrainingAndTest(irisValues, irisTargets, ratio=0.15)
dim(irisValues)
data(iris)
#shuffle the vector
iris <- iris[sample(1:nrow(iris),length(1:nrow(iris))),1:ncol(iris)]
irisValues <- iris[,1:4]
irisTargets <- decodeClassLabels(iris[,5])
splitForTrainingAndTest(irisValues, irisTargets, ratio=0.3)
data(iris)
#shuffle the vector
iris <- iris[sample(1:nrow(iris),length(1:nrow(iris))),1:ncol(iris)]
irisValues <- iris[,1:4]
irisTargets <- decodeClassLabels(iris[,5])
a <- splitForTrainingAndTest(irisValues, irisTargets, ratio=0.30)
a$inputsTrain
dim(a$targetsTrain)
dim(a$inputsTrain)
dim(a$inputsTest)
dim(a$targetsTest)
a$targetsTest
irisValues
summary(X)
irisTargets
Y
BreastCancer$Class
as.matrix(BreastCancer$Class)
View(as.matrix(BreastCancer$Class))
which(BreastCancer$Class == benign)
which(BreastCancer$Class == 'benign')
X(which(BreastCancer$Class == benign))
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
X[which(BreastCancer$Class == 'benign')]
X
BreastCancer$Class[which(BreastCancer$Class == 'benign')]
Y[which(BreastCancer$Class == 'benign'),1] <- 1
matrix(dim(X))
Y <- matrix(0, nrow = dim(X)[1], ncol = dim(X)[2])
Y[which(BreastCancer$Class == 'benign'),1] <- 1
View(Y)
Y <- matrix(0, nrow = dim(X)[1], ncol = 2)
Y[which(BreastCancer$Class == 'benign'),1] <- 1
View(Y)
Y[which(BreastCancer$Class == 'malignant'),2] <- 1
result <- splitForTrainingAndTest(X, Y, ratio = 0.30)
result
result$inputsTrain
dim(result$inputsTrain)
dim(result$inputsTest)
dim(result$inputsTest)
dim(result$targetsTest)
699*0.3
699*0.3xc1 <- X[which(BreastCancer$Class == 'benign')]
xc1 <- X[which(BreastCancer$Class == 'benign')]
xc1
dim(xc1)
length(xc1)
length(xc2)
xc2 <- X[which(BreastCancer$Class == 'malignant')]
xc2 <- X[which(BreastCancer$Class == 'malignant')]
length(xc2)
result <- splitForTrainingAndTest(X, Y, ratio = 0.30)
result$inputsTrain
dim(result$inputsTrain)
length(xc2)
length(xc1)
length(xc1)
458*0.3
X[which(BreastCancer$Class == 'benign')]
X[which(BreastCancer$Class == 'benign'),]
dim(xc1)[1]
xc1 <- X[which(BreastCancer$Class == 'benign'),1]
dim(xc1)[1]
dim(xc1)
xc1 <- X[which(BreastCancer$Class == 'benign'),1]
rm(list=ls())
library('bmp')
library('rgl')
library('caret')
library('mlbench')
library('RSNNS')
library('mclust')
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- matrix(0, nrow = dim(X)[1], ncol = 2)
Y[which(BreastCancer$Class == 'benign'),1] <- 1
Y[which(BreastCancer$Class == 'malignant'),2] <- 1
result <- splitForTrainingAndTest(X, Y, ratio = 0.30)
xTrain <- result$inputsTrain
xTest <- result$inputsTest
xc1 <- X[which(BreastCancer$Class == 'benign'),1]
rm(list=ls())
library('bmp')
library('rgl')
library('caret')
library('mlbench')
library('RSNNS')
library('mclust')
data(BreastCancer)
summary(BreastCancer)
X <- data.matrix(BreastCancer[,2:10])
X[is.na(X)] <- 0
Y <- matrix(0, nrow = dim(X)[1], ncol = 2)
Y[which(BreastCancer$Class == 'benign'),1] <- 1
Y[which(BreastCancer$Class == 'malignant'),2] <- 1
result <- splitForTrainingAndTest(X, Y, ratio = 0.30)
xTrain <- result$inputsTrain
xTest <- result$inputsTest
xc1 <- X[which(BreastCancer$Class == 'benign'),]
xc2 <- X[which(BreastCancer$Class == 'malignant'),]
dim(xc1)[1]
xc2
dim(xc2)[1]
241*0.3
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
137 + 321
72 + 169
c(xc1Test,xc2Test)
dim( c(xc1Test,xc2Test))
dim(c(xc1Test,xc2Test))
length(c(xc1Test,xc2Test))
length(crow(xc1Test,xc2Test))
length(crbind(xc1Test,xc2Test))
length(rbind(xc1Test,xc2Test))
xc1Test
dim(xc1Test)
dim(xc2Test)
length(cbind(xc1Test,xc2Test))
length(rbind(xc1Test,xc2Test))
length(as.matrix(rbind(xc1Test,xc2Test)))
a <- as.matrix(rbind(xc1Test,xc2Test))
dim(dataTest)
dataTest <- as.matrix(rbind(xc1Test,xc2Test))
dim(dataTest)
dim(dataTest[1])
dim(dataTest)[1]
vector(0, dim(dataTest)[1])
PxC <- rep(0, dim(dataTest)[1])
PxC
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
class
length(dataTest)
dim(dataTest)[1]
class
which(class == 1)
xc1Train
length(xc1Train)
dim(xc1Train)
dim(xc1Test)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
realOut
prediction
MSE
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
MSE
plot(MSE)
plot(SD)
percentage
plot(percentage)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 5/main.R', echo=TRUE)
plot(MSE, xlab='', ylab='',title='Erro Quadrático Médio (MSE)')
plot(SD, xlab='', ylab='',title='Desvio Padrão (SD)')
plot(MSE, xlab='', ylab='',main='Erro Quadrático Médio (MSE)')
plot(SD, xlab='', ylab='',main='Desvio Padrão (SD)')
plot(percentage, xlab='', ylab='',main='Acerto Percentual')
mean(percentage)
i <- [1,2,3,4]
i <- (1,2,3,4)
i <- c(1,2,3,4)
for(j in i)
{}
for(j in i){b <- j}
b
pi
srqt(2*pi)
sqrt(2*pi)
dim(b)
length(b)
N <- 30
xc1 <- rnorm(N)*0.5+2 #rnorm <- Média 0 e Desvio padrão 1
xc2 <- rnorm(N)*0.5+4
vec0 <- matrix(0,N)
plot(xc1, vec0, col='red',xlim=c(0,6),ylim=c(0,1),xlab='x',ylab='')
par(new=T)
plot(xc2, vec0, col='blue',xlim=c(0,6),ylim=c(0,1),xlab='x',ylab='')
N <- 30
xc1 <- rnorm(N)*0.5+2 #rnorm <- Média 0 e Desvio padrão 1
xc2 <- rnorm(N)*0.5+4
vec0 <- matrix(0,N)
plot(xc1, vec0, col='red',xlim=c(0,6),ylim=c(0,1),xlab='x',ylab='')
par(new=T)
plot(xc2, vec0, col='blue',xlim=c(0,6),ylim=c(0,1),xlab='x',ylab='')
fnormal1var <- function(x,m,r) ((1/(sqrt(2*pi*r*r)))*exp(-0.5 * ((x-m)/(r))^2))
m1 <- mean(xc1)
m2 <- mean(xc2)
s1 <- sd(xc1)
s2 <- sd(xc2)
xrange <- seq(0,6,0.1)
f1 <- fnormal1var(xrange,m1,s1) #aplicando os pontos na função
f2 <- fnormal1var(xrange,m2,s2) #aplicando os pontos na função
xrange <- seq(0,6,0.1)
f1 <- fnormal1var(xrange,m1,s1) #aplicando os pontos na função
f2 <- fnormal1var(xrange,m2,s2) #aplicando os pontos na função
yrange2 <- 1*(f2>f1) #resposta do classificador
par(new=T)
plot(xrange,f1,type = 'l', col ='red', xlim=c(0,6), ylim=c(0,1), xlab='x', ylab='')
par(new=T)
plot(xrange,f2,type = 'l', col ='blue', xlim=c(0,6), ylim=c(0,1), xlab='x', ylab='')
par(new=T)
plot(xrange,yrange2,type = 'l', col ='green', xlim=c(0,6), ylim=c(0,1), xlab='x', ylab='P(x|C1), P(x,C2), Classe (x)')
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/main.R', echo=TRUE)
f3 <- rep(0,length(xrange))
xc1
c(xc1,xc2)
as.matrix(c(xc1,xc2))
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/main.R', echo=TRUE)
par(new=T)
plot(xrange,f3,type = 'l', col ='purple', xlim=c(0,6), ylim=c(0,1), xlab='x', ylab='')
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/main.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/main.R', echo=TRUE)
plot(mlbench.1spiral(100,2,0))
plot(mlbench.1spiral(100,3,0))
plot(mlbench.1spiral(100,4,0))
plot(mlbench.1spiral(100,1,0))
plot(mlbench.1spiral(100,2,0))
mlbench.1spiral(100,2,0.1)
plot(mlbench.1spiral(100,2,0.1))
plot(mlbench.1spiral(100,2,0.1))
plot(mlbench.1spiral(100,2,0.1))
plot(mlbench.1spiral(100,2,0.1))
plot(mlbench.1spiral(100,2,0.0.5))
plot(mlbench.1spiral(100,2,0.05))
plot(rnorm(30)*0.5+2)
plot(xc1 <- rnorm(N)*0.5+2 #rnorm <- Média 0 e Desvio padrão 1
xc2 <- rnorm(N)*0.5+4)
plot(xc1 <- rnorm(N)*0.5+2) #rnorm <- Média 0 e Desvio padrão 1
plot(xc2 <- rnorm(N)*0.5+4)
data <- mlbench.1spiral(100,2,0.1)
plot(data)
data <- mlbench.1spiral(100,2,0)
plot(data)
seq(0,6,0.1)
seq(-2,2,0.1)
xrange <- seq(-2,2,0.05)
xrange <- seq(-3,3,0.05)
xrange <- seq(-2.5,2.5,0.05)
data <- mlbench.1spiral(101,2,0)
f4 <- rep(0,length(xrange))
xrange <- seq(-2.5,2.5,0.05)
for(i in 1: length(xrange)){
f4[i] <- KDE(xrange[i],as.matrix(data))
}
plot(xrange,f4,type = 'l', col ='blue', xlim=c(-2.5,2.5), ylim=c(-2.5,1), xlab='', ylab='')
rm(list=ls())
library('plot3D')
seqi <- seq(-25,25,2)
seqj <- seq(-25,25,2)
M <- matrix(1,nrow=length(seqi), ncol=length(seqj))
ci<-0
for(i in seqi)
{
ci <- ci + 1
cj <- 0
for(j in seqj)
{
cj <- cj + 1
M[ci,cj] <- i^3 + j^3 + 6*i*j
}
}
persp3D(seqi,seqj,M,contour=T)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Aula3.R', echo=TRUE)
xrange <- seq(-2.5,2.5,0.05)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/projecao.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/projecao.R', echo=TRUE)
matrix(0,101,101)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/projecao.R', echo=TRUE)
KDE(x,as.matrix(data))
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/projecao.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/projecao.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/projecao.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/projecao.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/projecao.R', echo=TRUE)
data <- mlbench.2spiral(101,2,0)
data <- mlbench.spirals(101,2,0)
numberOfClasses <- 2
for(i in 1:numberOfClasses)
{
iClass <- which(data$classes == i)
G[[i]] <- data$x[iClass,] #rbind(g1,g2,g3,g4)
}
data <- mlbench.spirals(101,2,0)
G <- list()
numberOfClasses <- 2
for(i in 1:numberOfClasses)
{
iClass <- which(data$classes == i)
G[[i]] <- data$x[iClass,] #rbind(g1,g2,g3,g4)
}
f4 <- rep(0,length(xrange))
xrange <- seq(-2.5,2.5,0.05)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/projecao.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/projecao.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/projecao.R', echo=TRUE)
KDE(xrange[2],as.matrix(G[[1]]))
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/projecao.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/ExemploMat.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/ExemploMat.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/ExemploMat.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/ExemploMat.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/ExemploMat.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/ExemploMat.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/ExemploMat.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/ExemploMat.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/ExemploMat.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/ExemploMat.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/ExemploMat.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/ExemploMat.R', echo=TRUE)
plot(dataSpirals)
setwd("C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6")
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/ExemploRaissa2.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/ExemploRaissa2.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/ExemploRaissa2.R', echo=TRUE)
m(list=ls())
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/ExemploRaissa2.R', echo=TRUE)
source('C:/Users/Guilherme/Desktop/Desktop/UFMG/2017-2/Reconhecimento de Padrões/Exercício 6/ExemploRaissa2.R', echo=TRUE)
dataSpirals$x
dataSpirals
dataSpirals$classes
dataSpirals$x
